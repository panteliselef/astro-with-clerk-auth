---
import Layout from "../layouts/Layout.astro";
import { queryBuilder } from "../db/planetscale";
import { GuestbookForm } from "../components/GuestbookForm";
import { type Entry, entriesStore } from "../atoms/enties";
import { Signatures } from "../components/Signatures";
import { UserButton } from "astro-clerk-auth/components/interactive";

const handleTruthyString = (value: string | boolean | undefined) => {
  if (typeof value === "undefined") {
    return false;
  }

  if (typeof value === "string") {
    return value === "true";
  }
  return value;
};

if (!handleTruthyString(import.meta.env.FLAG_GUESTBOOK)) {
  // Redirect with reason
  return new Response(null, {
    status: 307,
    headers: new Headers({
      "x-elef-reason": "flag-guestbook-false",
      Location: "/",
    }),
  });
}

async function getGuestbook() {
  const data = await queryBuilder
    .selectFrom("guestbook")
    .select(["id", "message", "created_by"])
    .orderBy("updatedAt", "desc")
    .limit(100)
    .execute();

  return data as Entry[];
}

let entries: Entry[];
let error = false;

try {
  entries = await getGuestbook();
  if (!Astro.locals.auth().userId) {
    throw new Error("Requires userid");
  }
} catch (e) {
  error = true;
  entries = [];
}

entriesStore.set(entries);
---

<Layout title="Guestbook | Pantelis">
  <div class="invisible" style="height:0;" id="ssr_data">
    {JSON.stringify(entries)}
  </div>
  <main class="w-full flex justify-center lg:pt-10">
    <div class="w-full p-5 max-w-lg flex flex-col gap-2">
      <div class="flex flex-col">
        <a class="text-sm pt-4" href="/">Portfolio</a>
        <div class="flex flex-row justify-between items-center">
          <h1 class="text-4xl font-serif">Guestbook</h1>
          <UserButton />
        </div>
        <p class="flex items-center gap-3 gtext-sm leading-8">‚úçÔ∏è</p>
      </div>
      <GuestbookForm client:load />
      {
        error && (
          <p class="text-neutral-600 dark:text-neutral-400 mr-1 text-center p-4">
            We failed to load entries üò©
          </p>
        )
      }
      <Signatures client:load />
    </div>
  </main>
</Layout>

<script>
  import { entriesStore } from "../atoms/enties";

  entriesStore.set(
    JSON.parse(document.getElementById("ssr_data")!.textContent || "{}"),
  );
</script>
